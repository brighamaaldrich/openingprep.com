services:
    # Frontend Static Site
    - type: staticSite
      name: frontend # You choose this name
      env: node
      plan: free
      rootDir: ./opening-prep
      buildCommand: "npm install && npm run build"
      publishDir: ./opening-prep/dist
      routes:
          - type: rewrite
            source: /api/(.*)
            # Use the name 'api' that you defined for the backend service below
            destination: https://api.onrender.com/api/$1

    # API Web Service (uses Dockerfile's default CMD)
    - type: web
      name: api # You choose this name
      env: docker
      plan: starter
      rootDir: ./server
      dockerfilePath: ./server/Dockerfile
      dockerContext: ./server
      preDeployCommand: "git lfs install && git lfs pull"
      envVars:
          - key: REDIS_URL
            fromService:
                type: redis
                name: redis-queue
                property: connectionString

    # Worker (overrides Dockerfile's CMD with a startCommand)
    - type: worker
      name: worker
      env: docker
      plan: starter
      rootDir: ./server
      dockerfilePath: ./server/Dockerfile
      dockerContext: ./server
      preDeployCommand: "git lfs install && git lfs pull"
      startCommand: "python worker.py" # <-- This overrides the Dockerfile CMD
      envVars:
          - key: REDIS_URL
            fromService:
                type: redis
                name: redis-queue
                property: connectionString

    # Redis Service
    - type: redis
      name: redis-queue
      plan: free
      ipAllowList: [] # Allows access from your other Render services
